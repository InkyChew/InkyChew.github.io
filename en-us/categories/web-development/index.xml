<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web Development on Becomegood</title><link>https://inkychew.github.io/en-us/categories/web-development/</link><description>Recent content in Web Development on Becomegood</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 24 Nov 2024 09:00:00 +0000</lastBuildDate><atom:link href="https://inkychew.github.io/en-us/categories/web-development/index.xml" rel="self" type="application/rss+xml"/><item><title>Efficient Sequential List Update with SignalR in Angular and .NET</title><link>https://inkychew.github.io/en-us/sequential-list-update/</link><pubDate>Sun, 24 Nov 2024 09:00:00 +0000</pubDate><guid>https://inkychew.github.io/en-us/sequential-list-update/</guid><description>Introduction When working with task management or planning applications, ensuring that users can reorder lists efficiently and in real-time is critical. A user may need to adjust the sequence of tasks, and such updates must be immediately reflected across all active users.
In this post, we’ll walk through how to manage and broadcast sequential list updates in real-time using SignalR for broadcasting updates and Angular for frontend notification handling. The goal is to provide users with a seamless experience as they reorder a list.</description></item><item><title>Using Signals to Update Data in Angular 18: A Comparison with RxJS</title><link>https://inkychew.github.io/en-us/angular-signal/</link><pubDate>Wed, 20 Nov 2024 09:00:00 +0000</pubDate><guid>https://inkychew.github.io/en-us/angular-signal/</guid><description>A new feature called signals has emerged in Angular, offering a cleaner and more intuitive approach to state management compared to the traditional RxJS-based methods. In this post, we’ll compare the use of RxJS with signal() for managing data updates, specifically focusing on updating user information upon login or logout.
The following example uses the @let syntax, which was introduced in Angular 18.
Using RxJS to Update Data 1. Define the Subject To manage user data with RxJS, we often define a BehaviorSubject that will hold and emit the user data.</description></item><item><title>.NET 6 - Authentication and Authorization with JWT</title><link>https://inkychew.github.io/en-us/dotnet-jwt/</link><pubDate>Fri, 19 Apr 2024 09:00:00 +0000</pubDate><guid>https://inkychew.github.io/en-us/dotnet-jwt/</guid><description>產生公私鑰 Generate a key pair using OpenSSL</description></item></channel></rss>